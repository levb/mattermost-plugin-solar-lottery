// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost/mattermost-plugin-solar-lottery/server/store (interfaces: RotationsStore)

// Package mock_store is a generated GoMock package.
package mock_store

import (
	gomock "github.com/golang/mock/gomock"
	store "github.com/mattermost/mattermost-plugin-solar-lottery/server/store"
	reflect "reflect"
)

// MockRotationsStore is a mock of RotationsStore interface
type MockRotationsStore struct {
	ctrl     *gomock.Controller
	recorder *MockRotationsStoreMockRecorder
}

// MockRotationsStoreMockRecorder is the mock recorder for MockRotationsStore
type MockRotationsStoreMockRecorder struct {
	mock *MockRotationsStore
}

// NewMockRotationsStore creates a new mock instance
func NewMockRotationsStore(ctrl *gomock.Controller) *MockRotationsStore {
	mock := &MockRotationsStore{ctrl: ctrl}
	mock.recorder = &MockRotationsStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRotationsStore) EXPECT() *MockRotationsStoreMockRecorder {
	return m.recorder
}

// LoadRotations mocks base method
func (m *MockRotationsStore) LoadRotations() (map[string]*store.Rotation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadRotations")
	ret0, _ := ret[0].(map[string]*store.Rotation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadRotations indicates an expected call of LoadRotations
func (mr *MockRotationsStoreMockRecorder) LoadRotations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadRotations", reflect.TypeOf((*MockRotationsStore)(nil).LoadRotations))
}

// StoreRotations mocks base method
func (m *MockRotationsStore) StoreRotations(arg0 map[string]*store.Rotation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreRotations", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreRotations indicates an expected call of StoreRotations
func (mr *MockRotationsStoreMockRecorder) StoreRotations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreRotations", reflect.TypeOf((*MockRotationsStore)(nil).StoreRotations), arg0)
}
