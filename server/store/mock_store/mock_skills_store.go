// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost/mattermost-plugin-solar-lottery/server/store (interfaces: SkillsStore)

// Package mock_store is a generated GoMock package.
package mock_store

import (
	gomock "github.com/golang/mock/gomock"
	store "github.com/mattermost/mattermost-plugin-solar-lottery/server/store"
	reflect "reflect"
)

// MockSkillsStore is a mock of SkillsStore interface
type MockSkillsStore struct {
	ctrl     *gomock.Controller
	recorder *MockSkillsStoreMockRecorder
}

// MockSkillsStoreMockRecorder is the mock recorder for MockSkillsStore
type MockSkillsStoreMockRecorder struct {
	mock *MockSkillsStore
}

// NewMockSkillsStore creates a new mock instance
func NewMockSkillsStore(ctrl *gomock.Controller) *MockSkillsStore {
	mock := &MockSkillsStore{ctrl: ctrl}
	mock.recorder = &MockSkillsStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSkillsStore) EXPECT() *MockSkillsStoreMockRecorder {
	return m.recorder
}

// LoadKnownSkills mocks base method
func (m *MockSkillsStore) LoadKnownSkills() (store.IDMap, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadKnownSkills")
	ret0, _ := ret[0].(store.IDMap)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadKnownSkills indicates an expected call of LoadKnownSkills
func (mr *MockSkillsStoreMockRecorder) LoadKnownSkills() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadKnownSkills", reflect.TypeOf((*MockSkillsStore)(nil).LoadKnownSkills))
}

// StoreKnownSkills mocks base method
func (m *MockSkillsStore) StoreKnownSkills(arg0 store.IDMap) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreKnownSkills", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreKnownSkills indicates an expected call of StoreKnownSkills
func (mr *MockSkillsStoreMockRecorder) StoreKnownSkills(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreKnownSkills", reflect.TypeOf((*MockSkillsStore)(nil).StoreKnownSkills), arg0)
}
